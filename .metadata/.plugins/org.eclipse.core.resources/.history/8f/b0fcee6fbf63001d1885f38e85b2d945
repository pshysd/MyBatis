package com.kh.mybatis.board.controller;

import java.io.IOException;
import java.util.ArrayList;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.kh.mybatis.board.model.service.BoardServiceImpl;
import com.kh.mybatis.board.model.vo.Board;
import com.kh.mybatis.common.model.vo.PageInfo;
import com.kh.mybatis.common.template.Pagination;

/**
 * Servlet implementation class BoardListViewController
 */
@WebServlet("/list.bo")
public class BoardListController extends HttpServlet {
	private static final long serialVersionUID = 1L;

	/**
	 * @see HttpServlet#HttpServlet()
	 */
	public BoardListController() {
		super();
	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		
//	    ==== 페이징 처리 ====
//	    현재 총 게시글 갯수 (삭제된건 포함시키면 안됨)
        int listCount  = new BoardServiceImpl().selectListCount();
        
//	    현재 페이지 (즉, 사용자가 요청한 페이지)
        int currentPage = Integer.parseInt(request.getParameter("currentPage"));
        
//	    페이지 하단에 보여질 페이징 바의 페이지 최대 갯수
        int pageLimit = 10;

//	    한 페이지에 보여질 게시글의 최대 갯수 (바꾸고 싶으면 자바스크립트로 가능)
        int boardLimit = 5;

        PageInfo pi = Pagination.getPageInfo(listCount, currentPage, boardLimit, pageLimit);
        System.out.println(pi);
        ArrayList<Board> list = new BoardServiceImpl().selectList(pi);
        
        request.setAttribute("list", list);
		request.getRequestDispatcher("WEB-INF/views/board/boardListView.jsp").forward(request, response);
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doGet(request, response);
	}

}
